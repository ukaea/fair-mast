version: '3.8'
services:
  api:
    container_name: mast-api
    build: .
    image: mast-api:latest
    restart: always
    environment:
      DATABASE_HOST: pg_container
      DATABASE_PORT: 80
    volumes:
      - ./data:/code/data
    ports:
      - "80:80"
    networks:
      - dbnetwork

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./s3data:/mnt/data
    environment:
      MINIO_ROOT_USER: minio99
      MINIO_ROOT_PASSWORD: minio123
      MINIO_VOLUMES: "/mnt/data"
    command: ['server', '/mnt/data', '--console-address', ":9001"]
    networks:
      - dbnetwork

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    volumes:
     - ./data/:/data
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set srv http://minio:9000 minio99 minio123;
      /usr/bin/mc mb srv/mast;
      /usr/bin/mc anonymous set public srv/mast;
      exit 0;
      "
    networks:
      - dbnetwork


  meta_database:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
      - ./:/app
    networks:
      - dbnetwork

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./:/app
    networks:
      - dbnetwork

networks:
  dbnetwork:
    name: dbnetwork
    driver: bridge

volumes:
    postgres:
    pgadmin: