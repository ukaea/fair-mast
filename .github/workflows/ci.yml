name: CI
on: [ pull_request ]

jobs:
  build-and-run-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set-up s5cmd
      uses: peak/action-setup-s5cmd@main
      with:
        version: v2.0.0
    - name: create env file from Github Secret
      run: |
        echo "KEYCLOAK_ADMIN=${{ secrets.KEYCLOAK_ADMIN }}" >> dev/docker/.env
        echo "KEYCLOAK_ADMIN_PASSWORD=${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}" >> dev/docker/.env
        echo "KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET }}" >> dev/docker/.env
        echo "KEYCLOAK_PASSWORD=${{ secrets.KEYCLOAK_PASSWORD }}" >> dev/docker/.env
        echo "KEYCLOAK_USER=${{ secrets.KEYCLOAK_USER }}" >> dev/docker/.env
        echo "PGADMIN_PASSWORD=${{ secrets.PGADMIN_PASSWORD }}" >> dev/docker/.env
        echo "PGADMIN_USER=${{ secrets.PGADMIN_USER }}" >> dev/docker/.env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> dev/docker/.env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> dev/docker/.env

    - name: Setup environment and prepare dir
      run: |
        sudo mkdir -p tests/mock_data
        sudo chown -R runner:runner tests/mock_data /dev/docker/realm_config
        s5cmd --no-sign-request --endpoint-url https://s3.echo.stfc.ac.uk cp "s3://mast/dev/mock_data*" ./tests
        pip install --upgrade pip
        pip install uv
        uv sync 

        
    - name: Build and run containers
      run: |
        docker compose \
        --env-file dev/docker/.env \
        -f dev/docker/docker-compose.yml \
        up \
        --build \
        -d 
  
    - name: Run tests
      run: |
        uv run pytest -rs

  ruff-code-check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff with relevent standards
        run: ruff check --select E4,E7,E9,F,I
