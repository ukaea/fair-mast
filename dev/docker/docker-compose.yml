services:
  # Service for hosting the API.
  # This container runs the FastAPI REST and GraphQL APIs
  api:
    container_name: mast-api
    build:
      context: ../../
      dockerfile: ./dev/docker/api.Dockerfile
    image: mast-api:latest
    restart: always
    volumes:
      - ../../tests/mock_data:/code/data
      - ../../data/index:/code/index
      - ../../src:/code/src
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - '8081:5000'
    entrypoint: 
      - "python"
      - "-m"
      - "uvicorn"
      - "src.api.main:app"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "5000"
      - "--reload"
    environment:
      - DATABASE_HOST=pg_container
      - DATABASE_PORT=5432
    networks:
      - dbnetwork

  # Service for the PostgreSQL Database
  # This container runs the PostgreSQL database which contains the metadata for MAST.
  meta_database:
    container_name: pg_container
    image: postgres:15.3
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
      - ./:/app
    networks:
      - dbnetwork

  # Service for pgadmin
  # This container runs a pgadmin instance for administering the database
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 5050
    ports:
      - "5050:5050"
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./:/app
    networks:
      - dbnetwork

  # Service for keycloak
  # This container runs keycloak image for authentication of some api ends.
  keycloak: 
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0 
    restart: always
    environment: 
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: keycloak
      KC_HEALTH_ENABLED: true
    ports: 
      - "8082:8080"
    volumes: 
      - realm-data:/opt/keycloak/data/
    command: 
      - start-dev
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/keycloak/8080 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks: 
      - dbnetwork
      
networks:
  dbnetwork:
    name: dbnetwork
    driver: bridge

volumes:
    postgres:
    pgadmin:
    acme:
    certs:
    vhost:
    html:
    realm-data:
